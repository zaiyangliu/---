#include<cstdio>
#include<queue>
using namespace std;
#define MAX 15
int visited[MAX] = {0};
int AdjMatrix[MAX][MAX] = {0};

void DFS(int v, int NV){
    visited[v] = 1;
    printf(" %d", v);
    for(int i = 0; i < NV; ++i){
        if(visited[i] == 0 && AdjMatrix[v][i] == 1){
            DFS(i, NV);
        }
    }
}
void BFS(int v, int NV){
    int temp;
    queue<int> Q;
    visited[v] = 1;
    Q.push(v);
    while(!Q.empty()){
        temp = Q.front();
        printf(" %d", temp);
        Q.pop();
        for(int i = 0; i < NV; ++i){
            if(visited[i] == 0 && AdjMatrix[temp][i] == 1){
                Q.push(i);
                visited[i] = 1;
            }
        }
    }
}
int main(){
    int NV, NE;
    int v1, v2;
    scanf("%d %d", &NV, &NE);
    for(int i = 0; i < NE; ++i){
        scanf("%d %d", &v1, &v2);
        AdjMatrix[v1][v2] = 1;
        AdjMatrix[v2][v1] = 1;
    }
    for(int v = 0; v <NV; ++v){
        if(visited[v] == 0){
            printf("{");
            DFS(v, NV);
            printf(" }\n");
        }
    }
    for(int v = 0; v < MAX; ++v){ //重置visited
        visited[v] = 0;
    }
    for(int v = 0; v < NV; ++v){
        if(visited[v] == 0){
            printf("{");
            BFS(v, NV);
            printf(" }\n");
        }
    }
    return 0;
}
