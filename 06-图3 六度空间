#include<cstdio>
#include<queue>
using namespace std;
const int Max = 10010;
bool visited[Max] = {false};
int map[Max][Max];
queue<int> Q;
int BFS(int v, int Nv){
    visited[v] = true;
    int last = v, level = 0, cnt = 1, tail;
    Q.push(v);
    while(!Q.empty()){
        int temp = Q.front();
        Q.pop();
        for(int i = 1; i <= Nv; ++i){
            if(!visited[i] && map[temp][i] == 1){
                Q.push(i);
                tail = i;
                cnt++;
                visited[i] = true;
            }
        }
        if(temp == last){
            level++;
            last = tail;
        }
        if(level == 6) break;
    }
    return cnt;
} 
queue<int> clear(queue<int> q){
    while(!q.empty()) q.pop();
    return q;
}
int main(){
    int n, m;
    scanf("%d%d", &n, &m);
    for(int i = 1; i <= n; ++i){
        for(int j = 1; j <= m; ++j){
            map[i][j] = 0;
        }
    }
    for(int i = 1; i <= m; ++i){
        int v, e;
        scanf("\n%d%d", &v, &e);
        map[v][e] = 1;
        map[e][v] = 1;
    }
    for(int i = 1; i <= n; ++i){
        for(int j = 1; j <= n; ++j) visited[j] = false;
        Q = clear(Q);
        double cnt = BFS(i, n);
        printf("%d: %0.2f%%\n", i, cnt/n*100);
    }
    return 0;
}
